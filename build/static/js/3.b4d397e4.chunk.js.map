{"version":3,"sources":["containers/PostsSecond/Post/Post.module.css","containers/PostsSecond/Post/Post.js"],"names":["module","exports","Post","props","template","useSelector","state","diary","notes","postName","note","push","name","content","dispatch","useDispatch","history","useHistory","token","auth","postItem","map","item","i","className","s","container","wrapper","onClick","postId","actions","post","date","fullDate"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,sBAAsB,UAAY,wBAAwB,KAAO,mBAAmB,OAAS,qBAAqB,MAAQ,sB,kGCmD3NC,UA9CF,SAACC,GAEV,IAFoB,EAEdC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,YAC5CI,EAAQ,GAHM,cAICJ,GAJD,IAIpB,2BAA+B,CAAC,IAAvBK,EAAsB,QACvBN,EAAMO,KAAKD,IACXD,EAAMG,KAAK,CACPC,KAAMH,EACNI,QAASV,EAAMO,KAAKD,MARZ,8BAapB,IAAMK,EAAWC,cACXC,EAAUC,cACVC,EAAQb,aAAY,SAAAC,GAAK,OAAIA,EAAMa,KAAKD,SASxCE,EAAWZ,EAAMa,KAAI,SAACC,EAAMC,GAAP,OACvB,sBAAKC,UAAWC,IAAEC,UAAlB,UACI,mBAAGF,UAAWC,IAAEb,KAAhB,SAAuBU,EAAKV,OAC5B,mBAAGY,UAAWC,IAAEZ,QAAhB,SAA0BS,EAAKT,YAFDU,MAMtC,OACI,mCACI,qBAAKC,UAAWC,IAAEE,QAEbC,QAAS,kBAnBCC,EAmBmB1B,EAAM0B,OAlB5Cf,EAASgB,OACThB,EAASgB,IAAkBD,IAC3Bf,EAASgB,IAA0BZ,EAAOW,SAC1Cb,EAAQL,KAAK,SAJK,IAACkB,GAiBf,SAII,sBAAKL,UAAWC,IAAEM,KAAlB,UACI,mBAAGP,UAAWC,IAAEO,KAAhB,SAAuB7B,EAAM8B,WAC5Bb","file":"static/js/3.b4d397e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__xkPK4\",\"post\":\"Post_post__2d-AE\",\"name\":\"Post_name__18Cgy\",\"content\":\"Post_content__21DnF\",\"container\":\"Post_container__1pOCO\",\"date\":\"Post_date__3cKvF\",\"button\":\"Post_button__qdTf_\",\"cover\":\"Post_cover__e8gSk\"};","import {useDispatch, useSelector} from 'react-redux';\r\nimport s from './Post.module.css';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    const template = useSelector(state => state.diary.template);\r\n    const notes = [];\r\n    for (let postName of template) {\r\n        if (props.note[postName]) {\r\n            notes.push({\r\n                name: postName,\r\n                content: props.note[postName]\r\n            })\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const token = useSelector(state => state.auth.token)\r\n    const toReadHandler = (postId) => {\r\n        dispatch(actions.clearDiaryObjToEdit());\r\n        dispatch(actions.setPostId(postId));\r\n        dispatch(actions.setPostDataToRead(token, postId))\r\n        history.push('/read')\r\n    }\r\n\r\n\r\n    const postItem = notes.map((item, i) => (\r\n        <div className={s.container} key={i}>\r\n            <p className={s.name}>{item.name}</p>\r\n            <p className={s.content}>{item.content}</p>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <div className={s.wrapper}\r\n                // onClick={() => toReadHandler(props.note, props.fullDate, props.millsec, props.postId)}\r\n                 onClick={() => toReadHandler(props.postId)}\r\n            >\r\n                <div className={s.post}>\r\n                    <p className={s.date}>{props.fullDate}</p>\r\n                    {postItem}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Post;"],"sourceRoot":""}